/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vollyball.panels.report;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author nishant.vibhute
 */
public class PanTeamReportShow extends javax.swing.JPanel {

    List<JPanel> panListToPrint = new ArrayList<>();
    int cb;
    int matchId;

    /**
     * Creates new form PanTeamReportShow
     */
    public PanTeamReportShow(int cb, int matchId, int type) {
        initComponents();
        if (type == 1) {
            PanTeamReportSkill panTeamReportSkill = new PanTeamReportSkill(cb, matchId);
            panView.add(panTeamReportSkill, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportSkill);
        } else if (type == 2) {
            PanTeamReportOfAttack panTeamReportOFAttack = new PanTeamReportOfAttack(cb, matchId);
            panView.add(panTeamReportOFAttack, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOFAttack);
        } else if (type == 3) {
            PanTeamReportOfService panTeamReportOfService = new PanTeamReportOfService(cb, matchId);
            panView.add(panTeamReportOfService, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOfService);
        } else if (type == 4) {
            PanTeamReportOfSet panTeamReportOfSet = new PanTeamReportOfSet(cb, matchId);
            panView.add(panTeamReportOfSet, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOfSet);
        } else if (type == 5) {
            PanTeamReportOfReception panTeamReportOfReception = new PanTeamReportOfReception(cb, matchId);
            panView.add(panTeamReportOfReception, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOfReception);
        } else if (type == 6) {
            PanTeamReportOfDefence panTeamReportOfDefence = new PanTeamReportOfDefence(cb, matchId);
            panView.add(panTeamReportOfDefence, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOfDefence);
        } else if (type == 7) {
            PanTeamReportOfBlock panTeamReportOfBlock = new PanTeamReportOfBlock(cb, matchId);
            panView.add(panTeamReportOfBlock, BorderLayout.CENTER);
            panListToPrint.add(panTeamReportOfBlock);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panPrint1 = new javax.swing.JPanel();
        lblPrint1 = new javax.swing.JLabel();
        panShow = new javax.swing.JScrollPane();
        panView = new javax.swing.JPanel();

        panPrint1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblPrint1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPrint1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPrint1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vollyball/images/printer.png"))); // NOI18N
        lblPrint1.setToolTipText("Print This Page");
        lblPrint1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPrint1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panPrint1Layout = new javax.swing.GroupLayout(panPrint1);
        panPrint1.setLayout(panPrint1Layout);
        panPrint1Layout.setHorizontalGroup(
            panPrint1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPrint1Layout.createSequentialGroup()
                .addComponent(lblPrint1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addContainerGap())
        );
        panPrint1Layout.setVerticalGroup(
            panPrint1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPrint1Layout.createSequentialGroup()
                .addComponent(lblPrint1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(621, 621, 621)
                .addComponent(panPrint1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panPrint1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panView.setLayout(new java.awt.BorderLayout());
        panShow.setViewportView(panView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panShow, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panShow, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void lblPrint1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPrint1MouseClicked
        // TODO add your handling code here:
        panPrint1.setVisible(false);
        printComponenet(panListToPrint);
        panPrint1.setVisible(true);
    }//GEN-LAST:event_lblPrint1MouseClicked

    public void printComponenet(final List<JPanel> comp) {
        PageFormat documentPageFormat = new PageFormat();
        Paper PAPER = new Paper();
        PAPER.setSize(595.4, 841.69);
        PAPER.setImageableArea(36, 36, 523.4, 769.69);

        documentPageFormat.setPaper(PAPER);
        documentPageFormat.setOrientation(PageFormat.PORTRAIT);
        PrinterJob pj = PrinterJob.getPrinterJob();
        pj.setJobName("Score Report_-_");

        Book book = new Book();
        for (Component c : comp) {
            final Component comp1 = c;
            Printable p1 = new Printable() {
                @Override
                public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                    Dimension dim = comp1.getSize();
                    double cHeight = dim.getHeight();
                    double cWidth = dim.getWidth();
                    // get the bounds of the printable area

                    double pHeight = pageFormat.getImageableHeight();
                    double pWidth = pageFormat.getImageableWidth();
                    double pXStart = pageFormat.getImageableX();
                    double pYStart = pageFormat.getImageableY();
                    double xRatio = pWidth / cWidth;
                    double yRatio = pHeight / cHeight;
                    Graphics2D g2 = (Graphics2D) graphics;
                    g2.translate(pXStart, pYStart);
                    g2.scale(xRatio, yRatio);
                    comp1.printAll(g2);
                    return Printable.PAGE_EXISTS;
                }
            };
            book.append(p1, documentPageFormat);
        }
        pj.setPageable(book);
        if (pj.printDialog() == false) {
            return;
        }
        try {
            pj.print();
        } catch (PrinterException ex) {
            // handle exception
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPrint1;
    private javax.swing.JPanel panPrint1;
    private javax.swing.JScrollPane panShow;
    private javax.swing.JPanel panView;
    // End of variables declaration//GEN-END:variables
}
