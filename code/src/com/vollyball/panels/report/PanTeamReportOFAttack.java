/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vollyball.panels.report;

import com.vollyball.enums.SkillDescCriteriaPoint;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.JLabel;

/**
 *
 * @author nishant.vibhute
 */
public class PanTeamReportOFAttack extends javax.swing.JPanel {

    String datatr = "";

    String html = "<html><head>\n"
            + "<style type=\"text/css\">\n"
            + "table {width: 100%}\n"
            + "td, th {background-color: white;text-align: center;height: 14px}\n"
            + "</style>\n"
            + "</head><body><div style=\"background-color: black\"><table>";

    /**
     * Creates new form PanTeamReportOFAttack
     */
    public PanTeamReportOFAttack() {
        initComponents();
        createComplexOverviewTable();
        createAttackBlockOverviewTable();
    }

    public void createComplexOverviewTable() {
        datatr = "";
        String htmlOverview = html;
        String header = htmlOverview + "<tr><th rowspan=2 colspan=2></th><th colspan=3>K1</th><th colspan=3>K2</th><th colspan=3>TP</th></tr><tr>"
                + "<th width=40>A</th><th width=40>+(%)</th><th width=40>-(%)</th>"
                + "<th width=40>A</th><th width=40>+(%)</th><th width=40>-(%)</th>"
                + "<th width=40>A</th><th width=40>+(%)</th><th width=40>-(%)</th></tr>";
        createComplexOverviewTableData(14);
        createComplexOverviewTableData(19);
        createComplexOverviewTableData(11);
        createComplexOverviewTableData(15);
        htmlOverview = header + datatr + "</table></div></html>";
        JLabel lbl = new JLabel();
        lbl.setText(htmlOverview);
        panComplex.add(lbl, BorderLayout.CENTER);

    }

    public void createComplexOverviewTableData(int criteriaid) {

        List<SkillDescCriteriaPoint> lst = SkillDescCriteriaPoint.getTypeByskillDescCriteriaId(criteriaid);

        for (int i = 0; i < lst.size(); i++) {
            datatr = datatr + "<tr>";
            if (i == 0) {
                datatr = datatr + "<td width=60 rowspan=" + lst.size() + ">Tempo</td>";

            }
            datatr = datatr + "<td  width=60>" + lst.get(i).getAbbreviation() + "</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>";
        }
    }

    public void createAttackBlockOverviewTable() {
        datatr = "";
        String htmlAttackBlock = html;
        String header = htmlAttackBlock + "<tr><th>Tempo</th>"
                + "<th></th>"
                + "<th>Technique</th>"
                + "<th>Zone</th>"
                + "<th>Complex</th>"
                + "<th>Attk. Comb.</th>"
                + "<th>Overall</th></tr>";

        createAttackBlockOverviewTableData();
        htmlAttackBlock = header + datatr + "</table></div></html>";
        JLabel lbl = new JLabel();
        lbl.setText(htmlAttackBlock);
        panAttackBlock.add(lbl, BorderLayout.CENTER);
    }

    public void createAttackBlockOverviewTableData() {
        List<SkillDescCriteriaPoint> lstBlock = SkillDescCriteriaPoint.getTypeByskillDescCriteriaId(19);

        for (int i = 0; i < lstBlock.size(); i++) {
            datatr = datatr + "<tr><td colspan=7>" + lstBlock.get(i).getAbbreviation() + "</td></tr>";

            List<SkillDescCriteriaPoint> lstTempo = SkillDescCriteriaPoint.getTypeByskillDescCriteriaId(14);
            for (int j = 0; j < lstTempo.size(); j++) {

                datatr = datatr + "<tr><td rowspan=" + 3 + ">" + lstTempo.get(j).getAbbreviation() + "</td>";
                datatr = datatr + "<td>Succ</td><td></td><td></td><td></td><td></td><td></td></tr>";

                datatr = datatr + "<tr><td>Fav</td><td></td><td></td><td></td><td></td><td></td></tr>";
                datatr = datatr + "<tr><td>Fail</td><td></td><td></td><td></td><td></td><td></td></tr>";
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panComplex = new javax.swing.JPanel();
        panAttackBlock = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        panComplex.setBackground(new java.awt.Color(255, 255, 255));
        panComplex.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panComplex.setLayout(new java.awt.BorderLayout());

        panAttackBlock.setBackground(new java.awt.Color(255, 255, 255));
        panAttackBlock.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panComplex, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panAttackBlock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panComplex, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panAttackBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 1169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 187, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panAttackBlock;
    private javax.swing.JPanel panComplex;
    // End of variables declaration//GEN-END:variables
}
