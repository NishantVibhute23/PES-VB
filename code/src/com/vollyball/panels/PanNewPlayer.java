/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vollyball.panels;

import com.vollyball.bean.Player;
import com.vollyball.bean.Team;
import com.vollyball.bean.TeamRowBean;
import com.vollyball.controller.Controller;
import com.vollyball.dao.TeamDao;
import com.vollyball.enums.PlayerPosition;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author #my
 */
public class PanNewPlayer extends javax.swing.JPanel {

    List<Player> playerList;
    List<JComboBox> position = new ArrayList<>();
    List<JCheckBox> captainCheckBoxList = new ArrayList<>();

    List<TeamRowBean> teamRow = new ArrayList<>();
    List<JPanel> rowPanels = new ArrayList<>();
    List<JLabel> lblMinusList = new ArrayList<>();
    LinkedHashMap<String, Integer> teamsMap;
    TeamDao td = new TeamDao();
    String message;
    protected int playerId;

    /**
     * Creates new form PanNewPlayer
     */
    public PanNewPlayer() {
        initComponents();

        TeamDao teamDao = new TeamDao();
        List<Team> teams = teamDao.getTeams(Controller.competitionId);
        teamsMap = new LinkedHashMap<>();
        team1combo1.addItem("Select");
        for (Team team : teams) {
            teamsMap.put(team.getName(), team.getId());
            team1combo1.addItem(team.getName());
        }

        for (PlayerPosition pp : PlayerPosition.values()) {
            team1position.addItem(pp.getName());
        }
    }

    public PanNewPlayer(int playerId) {
        initComponents();
        this.playerId = playerId;
        TeamDao teamDao = new TeamDao();
        List<Team> teams = teamDao.getTeams(Controller.competitionId);
        Player player = teamDao.getPlayerById(playerId);
        teamsMap = new LinkedHashMap<>();
        for (Team team : teams) {
            teamsMap.put(team.getName(), team.getId());
            team1combo1.addItem(team.getName());

        }
        for (PlayerPosition pp : PlayerPosition.values()) {
            team1position.addItem(pp.getName());
        }

        team1combo1.setSelectedItem(player.getTeamId());
        txtPlayerName.setText(player.getName());
        txtPlayerChestNo.setText(player.getChestNo());
        team1position.setSelectedIndex(player.getPosition());
        if (player.isCaptain()) {
            captain1.setSelected(true);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        team1combo1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        savePlayerLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtPlayerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        captain1 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtPlayerChestNo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        team1position = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        team1combo1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        team1combo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                team1combo1ItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Team");

        jPanel8.setBackground(new java.awt.Color(57, 74, 108));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        savePlayerLabel.setBackground(new java.awt.Color(0, 153, 255));
        savePlayerLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        savePlayerLabel.setForeground(new java.awt.Color(255, 255, 255));
        savePlayerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        savePlayerLabel.setText("SAVE");
        savePlayerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savePlayerLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(savePlayerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(savePlayerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel9.setBackground(new java.awt.Color(57, 74, 108));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("New Player");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        txtPlayerName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPlayerName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPlayerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlayerNameActionPerformed(evt);
            }
        });
        txtPlayerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlayerNameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel15.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        captain1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                captain1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(captain1)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(captain1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Captain");

        txtPlayerChestNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPlayerChestNo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtPlayerChestNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlayerChestNoActionPerformed(evt);
            }
        });
        txtPlayerChestNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlayerChestNoKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Chest No.");

        team1position.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        team1position.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                team1positionItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Position");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(151, 288, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(team1combo1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPlayerName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addGap(189, 189, 189)))
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(txtPlayerChestNo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(team1position, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(team1combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPlayerName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlayerChestNo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(team1position, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPlayerChestNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlayerChestNoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlayerChestNoKeyReleased

    private void txtPlayerChestNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlayerChestNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlayerChestNoActionPerformed

    private void captain1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_captain1ItemStateChanged
        enabledDisabledCheckBox(evt);
    }//GEN-LAST:event_captain1ItemStateChanged

    private void txtPlayerNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlayerNameKeyReleased
        // TODO add your handling code here:

        //        lblHeading.setText(txtPlayerName.getText());
        //        if (txtPlayerName.getText().equals("")) {
        //            lblHeading.setText("New Player");
        //        }
    }//GEN-LAST:event_txtPlayerNameKeyReleased

    private void txtPlayerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlayerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlayerNameActionPerformed

    private void savePlayerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savePlayerLabelMouseClicked
        // TODO add your handling code here:

        if (playerId == 0) {
            String msg = validateFields();
            if (!msg.isEmpty()) {
                JOptionPane.showMessageDialog(this, msg);
            } else {
                msg = checkDuplicateChestNum();
                if (!msg.isEmpty()) {
                    JOptionPane.showMessageDialog(this, msg);
                } else {
                    playerList = new ArrayList<>();

                    Team team = new Team();
                    team.setId(teamsMap.get(team1combo1.getSelectedItem()));
                    team.setName((String) team1combo1.getSelectedItem());
                    team.setCompId(Controller.competitionId);

                    Player p = new Player();
                    p.setChestNo(txtPlayerChestNo.getText());
                    p.setName(txtPlayerName.getText());
                    p.setCaptain(captain1.isSelected());
                    p.setPosition(team1position.getSelectedIndex());
                    playerList.add(p);
                    team.setPlayerList(playerList);

                    int id = td.insertPlayer(team);

                    if (id != 0) {
                        Controller.createPlayerDialog.close();

                        JOptionPane.showMessageDialog(this, "Player '" + txtPlayerName.getText() + "' Added Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to add Player");
                    }
                }
            }
        } else {
            String msg = validateFields();
            if (!msg.isEmpty()) {
                JOptionPane.showMessageDialog(this, msg);
            } else {
                //                msg = checkDuplicateChestNum();
                //                if (!msg.isEmpty()) {
                //                    JOptionPane.showMessageDialog(this, msg);
                //                } else {
                playerList = new ArrayList<>();

                Team team = new Team();
                team.setId(teamsMap.get(team1combo1.getSelectedItem()));
                team.setName((String) team1combo1.getSelectedItem());
                team.setCompId(Controller.competitionId);

                Player p = new Player();
                p.setId(playerId);
                p.setChestNo(txtPlayerChestNo.getText());
                p.setName(txtPlayerName.getText());
                p.setCaptain(captain1.isSelected());
                p.setPosition(team1position.getSelectedIndex());
                playerList.add(p);
                team.setPlayerList(playerList);

                int id = td.updatePlayer(team);

                if (id != 0) {
                    Controller.createPlayerDialog.close();

                    JOptionPane.showMessageDialog(this, "Player '" + txtPlayerName.getText() + "' Updated Successfully");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to Update Player");
                }
                //                }
            }

        }
    }//GEN-LAST:event_savePlayerLabelMouseClicked

    private void team1combo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_team1combo1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_team1combo1ItemStateChanged

    private void team1positionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_team1positionItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_team1positionItemStateChanged

    public void enabledDisabledCheckBox(java.awt.event.ItemEvent evt) {
        captain1.setForeground(Color.BLACK);
        String type = "";
        JCheckBox checkBox = (JCheckBox) evt.getSource();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            type = "checked";
        } else {
            type = "unchecked";
        }

        if (type.equals("checked")) {
            for (JCheckBox chk : captainCheckBoxList) {
                if (chk != checkBox) {
                    chk.setEnabled(false);
                }
            }
        } else {
            for (JCheckBox chk : captainCheckBoxList) {
                if (chk != checkBox) {
                    chk.setEnabled(true);
                }
            }
        }
    }

    public String checkDuplicateChestNum() {
        String msg = "";
        List<Player> chestNumList = new ArrayList<>();
        int k = 1;
        String chestNo = txtPlayerChestNo.getText();
        chestNumList = td.getTeamPlayers(teamsMap.get(team1combo1.getSelectedItem()));
        for (Player player : chestNumList) {
            if (player.getChestNo().equals(chestNo)) {
                msg = "Chest No Exist";
            }
        }

        return msg;
    }

    public String validateFields() {
        String msg = "";

        int k = 1;

        if (!validate(txtPlayerName).isEmpty()) {
            msg = msg + "Name" + message + "\n";
            txtPlayerName.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        }

        if (!validateNumber(txtPlayerChestNo).isEmpty()) {
            msg = msg + "Chest Num " + k + " : " + message + "\n";
            txtPlayerChestNo.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        }

        if (captain1.isSelected()) {
            List<Player> capList = new ArrayList<>();
            capList = td.getTeamPlayers(teamsMap.get(team1combo1.getSelectedItem()));
            for (Player player : capList) {
                if (player.isCaptain() && player.getId() != playerId) {
                    msg = "Team Already have captain";
                    captain1.setForeground(Color.red);
                }
            }

        }

        return msg;

    }

    public String validate(JTextField jf) {
        String regexName = "^[a-zA-Z ]*$";
        String val = jf.getText();
        message = "";

        if (val.equalsIgnoreCase("")) {
            message = " cannot be Empty";

        } else if (!val.matches(regexName)) {
            message = " must contains only Letters";

        }
        return message;

    }

    public String validateNumber(JTextField jf) {
        String regexName = "^[0-9]*$";
        String val = jf.getText();
        message = "";

        if (val.equalsIgnoreCase("")) {
            message = " cannot be Empty";

        } else if (!val.matches(regexName)) {
            message = " must contains only Digits";

        }
        return message;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox captain1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel savePlayerLabel;
    public javax.swing.JComboBox team1combo1;
    public javax.swing.JComboBox team1position;
    private javax.swing.JTextField txtPlayerChestNo;
    private javax.swing.JTextField txtPlayerName;
    // End of variables declaration//GEN-END:variables
}
