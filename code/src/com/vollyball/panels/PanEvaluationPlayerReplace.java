/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vollyball.panels;

import com.vollyball.bean.Player;
import com.vollyball.enums.PlayerPosition;
import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;

/**
 *
 * @author nishant.vibhute
 */
public class PanEvaluationPlayerReplace extends javax.swing.JPanel {

    Player player;
    int rotationPosition;

    /**
     * Creates new form PanEvaluationPlayerReplace
     */
    public PanEvaluationPlayerReplace(Player p, int rotationPosition) {
        initComponents();
        this.player = p;
        this.rotationPosition = rotationPosition;
    }

    PanEvaluationPlayerReplace() {

    }

    public int getPlayerEval() {

        return rotationPosition;
    }

    public String getChestNo() {
        return player.getChestNo();
    }

    public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        int centerX = 40, centerY = 40;
        int ovalWidth = 50, ovalHeight = 50;

//        Player player = new Player();
//        player.setChestNo("11");
//        player.setPosition(3);
        String text = player.getChestNo();
        // Draw oval
        GradientPaint redtowhite = new GradientPaint(centerX - ovalWidth / 2, centerY - ovalHeight / 2, PlayerPosition.getNameById(player.getPosition()).getColor(), centerX - ovalWidth / 2 + 130, centerY - ovalHeight / 2, Color.white);
        g2.setPaint(redtowhite);
        g2.fill(new Ellipse2D.Double(centerX - ovalWidth / 2, centerY - ovalHeight / 2, 50, 50));
        g2.setPaint(Color.black);

        // Draw centered text
        FontMetrics fm = g.getFontMetrics();
        double textWidth = fm.getStringBounds(text, g).getWidth();
        Font font = new Font("Serif", Font.BOLD, 20);
        g2.setFont(font);
        g.setColor(Color.WHITE);
        g.drawString(text, (int) (centerX - textWidth / 1.4),
                (int) (centerY + fm.getMaxAscent() / 1.4));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
