# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.

insert.signUp=insert into user_detail(id,username,emailid,password) values(?,?,?,?)

db.name=vollyball.db
#db.name=volley.db

create.competition = CREATE TABLE competition (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(255) NOT NULL, venue VARCHAR(255) NOT NULL,start_date DATE NOT NULL,end_date DATE NOT NULL,age_group varchar(200) NOT NULL,isDeleted INTEGER default 0);

create.user = CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,password varchar(250),email_id VARCHAR(255) NOT NULL,key VARCHAR(255) NOT NULL,is_activated INTEGER NOT NULL,mac_address varchar(500),created_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);

create.team = CREATE TABLE teams (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,shortcode varchar(50),competition_id INTEGER NOT NULL,coach VARCHAR(255),asst_coach VARCHAR(255),trainer VARCHAR(255),medical_officer VARCHAR(255),analyzer VARCHAR(255),FOREIGN KEY(competition_id) REFERENCES competition(id));

create.players = CREATE TABLE players (id INTEGER PRIMARY KEY AUTOINCREMENT,chest_num varchar(50) NOT NULL,name VARCHAR(255) NOT NULL,position int,is_captain int,team_id INT NOT NULL,FOREIGN KEY(team_id) REFERENCES teams(id));

create.pool = CREATE TABLE pool (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,competition_id INTEGER NOT NULL,FOREIGN KEY(competition_id) REFERENCES competition(id));

create.matches = CREATE TABLE matches (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) ,date DATE NOT NULL,time TIME NOT NULL,competition_id INTEGER NOT NULL,team1 INTEGER NOT NULL,team2 INTEGER NOT NULL,dayNumber INTEGER,matchNumber INTEGER,phase varchar(50),place varchar(500),won_by Integer,FOREIGN KEY(team1) REFERENCES teams(id),FOREIGN KEY(team2) REFERENCES teams(id),FOREIGN KEY(competition_id) REFERENCES competition(id));

create.matchplayers = CREATE TABLE match_players (id INTEGER PRIMARY KEY AUTOINCREMENT,match_id INTEGER NOT NULL,team1 INTEGER NOT NULL,player_id INTEGER NOT NULL,FOREIGN KEY(team1) REFERENCES teams(id),FOREIGN KEY(player_id) REFERENCES players(id),FOREIGN KEY(match_id) REFERENCES matches(id));

create.mskills = CREATE TABLE m_skills (id INTEGER PRIMARY KEY,name VARCHAR(100) NOT NULL);

create.mrating = CREATE TABLE m_rating (id INTEGER PRIMARY KEY,grade VARCHAR(255) NOT NULL);

create.mskilldesccriteria = CREATE TABLE m_skills_desc_criteria (id INTEGER PRIMARY KEY,type VARCHAR(255) NOT NULL,skill_id INTEGER NOT NULL,FOREIGN KEY(skill_id) REFERENCES m_skills(id));

create.mskilldesccriteriapoint = CREATE TABLE m_skill_desc_criteria_point (id INTEGER PRIMARY KEY,type varchar(100) NOT NULL,abbreviation varchar(20) NOT NULL,skill_desc_criteria_id INTEGER NOT NULL,FOREIGN KEY(skill_desc_criteria_id) REFERENCES m_skills_desc_criteria(id));

create.mskilldetails = CREATE TABLE m_skill_details (id INTEGER PRIMARY KEY,skill_id INTEGER NOT NULL,rating_id INTEGER NOT NULL,name varchar(500) NOT NULL,description TEXT NOT NULL, FOREIGN KEY(skill_id) REFERENCES m_skills(id),FOREIGN KEY(rating_id) REFERENCES m_rating(id));

create.matchevaluationteam = CREATE TABLE match_evaluation_team (id INTEGER PRIMARY KEY AUTOINCREMENT,match_id INTEGER NOT NULL,evaluation_team_id INTEGER NOT NULL,opponent_team_id INTEGER NOT NULL,FOREIGN KEY(match_id) REFERENCES matches(id));

create.matchevaluationset = CREATE TABLE match_evaluation_set (id INTEGER PRIMARY KEY AUTOINCREMENT,match_evaluation_team_id INTEGER NOT NULL,set_no INTEGER NOT NULL,homescore integer default 0,opponentscore integer default 0,won_by INTEGER ,start_time TIME NOT NULL,end_time TIME NOT NULL,evaluator VARCHAR(255) NOT NULL,date Date,FOREIGN KEY(match_evaluation_team_id) REFERENCES match_evaluation_team(id));

create.rally = CREATE TABLE rally (id INTEGER PRIMARY KEY AUTOINCREMENT,number INTEGER NOT NULL,home_score INTEGER default 0,opponent_score default 0,start_time varchar(50), end_time varchar(50),evaluation_id INTEGER NOT NULL,start_by integer, wonby integer,FOREIGN KEY(evaluation_id) REFERENCES match_evaluation_set(id));

create.rallydetails = CREATE TABLE rally_details (id INTEGER PRIMARY KEY AUTOINCREMENT,skill INTEGER NOT NULL,chest_no INTEGER NOT NULL,rating INTEGER NOT NULL,order_num int not null,rally_id INTEGER NOT NULL,FOREIGN KEY(rally_id) REFERENCES rally(id));

create.rallydetailscriteria = CREATE TABLE rally_details_criteria (id INTEGER PRIMARY KEY AUTOINCREMENT,skill_desc_criteria_id INTEGER NOT NULL,type varchar(20) NOT NULL,rally_details_id INTEGER NOT NULL,FOREIGN KEY(rally_details_id) REFERENCES rally_details(id),FOREIGN KEY(skill_desc_criteria_id) REFERENCES m_skills_desc_criteria(id));

create.setRotationOrder = CREATE TABLE setRotationOrder (id INTEGER PRIMARY KEY AUTOINCREMENT,position	INTEGER NOT NULL,playerId INTEGER,match_evaluation_id INTEGER,FOREIGN KEY(playerId) REFERENCES players(id),FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation_set(id));

create.setsubstitution = CREATE TABLE set_substitution (id INTEGER PRIMARY KEY AUTOINCREMENT,position INTEGER,rotation_player_id INTEGER,substitute_player_id INTEGER,point1 varchar(50),point2 varchar(50),point1_at_rally_id integer,point2_at_rally_id integer,match_evaluation_id INTEGER,FOREIGN KEY(rotation_player_id) REFERENCES players(id),FOREIGN KEY(substitute_player_id) REFERENCES players(id),FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation_set(id));

create.setplusminus = CREATE TABLE set_plus_minus (id INTEGER PRIMARY KEY AUTOINCREMENT, opponent_error varchar(50),team_fault varchar(50),match_evaluation_id INTEGER,FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation_set(id));

create.settimeout = CREATE TABLE set_timeOut (id INTEGER PRIMARY KEY AUTOINCREMENT,position INTEGER,timeOut varchar(50),A varchar(50),B varchar(50),match_evaluation_id INTEGER,timeout_at_rally int,FOREIGN KEY(match_evaluation_id) REFERENCES match_evaluation_set(id));

create.rallyRotationorder = CREATE TABLE rally_rotation_order ( id integer NOT NULL PRIMARY KEY AUTOINCREMENT, pos1playerId  integer, pos2playerId  integer, pos3playerId  integer, pos4playerId  integer, pos5playerId  integer, pos6playerId  integer, rallyId       integer, CONSTRAINT Foreign_key01 FOREIGN KEY (rallyId) REFERENCES rally(id));

create.vollycoordinate = CREATE TABLE VollyCourtCoordinates (  id integer NOT NULL PRIMARY KEY ,  Type    varchar(50),  from_pos integer,  to_pos   integer,  x1      integer,  y1      integer,  x2      integer,  y2      integer,  x3      integer,  y3      integer,  x4      integer,  y4      integer);

create.matchevaluationsetlatestrotation = CREATE TABLE match_evaluation_set_latest_rotation ( id integer NOT NULL PRIMARY KEY AUTOINCREMENT, pos1playerId  integer, pos2playerId  integer, pos3playerId  integer, pos4playerId  integer, pos5playerId  integer, pos6playerId  integer, match_evaluation_set_id       integer, CONSTRAINT Foreign_key01 FOREIGN KEY (match_evaluation_set_id) REFERENCES match_evaluation_set(id));

insert.vollycoordinate = insert into VollyCourtCoordinates(id,Type,from_pos,to_pos,x1,y1,x2,y2,x3,y3,x4,y4) values(?,?,?,?,?,?,?,?,?,?,?,?);

#insert queries
insert.ratings = insert into m_rating(id,grade) values(?,?);
insert.skills = insert into m_skills(id,name) values(?,?);
insert.skillsdetails = insert into m_skill_details(id,skill_id,rating_id,name,description) values(?,?,?,?,?);
insert.user= insert into user (name,email_id,key,is_activated,mac_address,password) values(?,?,?,?,?,?);
insert.rallyRotationorder = insert into rally_rotation_order(pos1playerId,pos2playerId,pos3playerId,pos4playerId,pos5playerId,pos6playerId,rallyId) values(?,?,?,?,?,?,?);
update.rallyRotationorder = update rally_rotation_order set pos1playerId=?,pos2playerId=?,pos3playerId=?,pos4playerId=?,pos5playerId=?,pos6playerId=? where  rallyId=?

insert.setLatestorder = insert into match_evaluation_set_latest_rotation(pos1playerId,pos2playerId,pos3playerId,pos4playerId,pos5playerId,pos6playerId,match_evaluation_set_id) values(?,?,?,?,?,?,?);
update.setLatestorder = update match_evaluation_set_latest_rotation set pos1playerId=?,pos2playerId=?,pos3playerId=?,pos4playerId=?,pos5playerId=?,pos6playerId=? where  match_evaluation_set_id=?

#After setup
check.login = select id from user where name = ? and password = ?;
insert.competition = insert into competition(name,venue,start_date,end_date,age_group) values(?,?,?,?,?);

#competition queries
get.competitionlist = select id,name,venue,start_date,end_date,age_group,isDeleted from competition;
get.competitionlistbyId=select id,name,venue,start_date,end_date,age_group from competition where id=? and isDeleted=0;
update.competition=update competition set name=?,venue=?,start_date=?,end_date=?,age_group=? where id=?;

#team queries
insert.team = insert into teams(name,coach,asst_coach,trainer,medical_officer,analyzer,competition_id,shortcode)values(?,?,?,?,?,?,?,?);
get.latest.team.id = select id from teams order by id desc limit 1;
insert.player = insert into players(name,chest_num,team_id,position,is_captain) values(?,?,?,?,?);
get.teams = select id,name from teams where competition_id = ?;
get.players = select p.id,p.name,p.chest_num,p.position,t.name from players p join teams t on p.team_id = t.id where team_id = ?
get.matchplayers = select player_id from match_players where team1 = ? and match_id = ?
get.isMatchSelected  = select team1 from match_players where match_id=?;
get.team.detail = select t.id,t.name,t.shortcode,t.competition_id,t.coach,t.asst_coach,t.trainer,t.medical_officer,t.analyzer from teams t  where id = ?

get.all.players = select p.id,p.name,p.chest_num,p.position,t.name from players p join teams t on p.team_id = t.id where t.competition_id = ?

#Match queries
insert.match = insert into matches(team1,team2,dayNumber,matchNumber,date,TIME,phase,competition_id,place)values(?,?,?,?,?,?,?,?,?);
#get.matchesbyid= SELECT t1.name,t2.name,date,m.team1,m.team2,m.id,t1.shortcode,t2.shortcode,m.phase FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id = ? and m.id = ? order by date asc;
get.matchesbyid= SELECT t1.name,t2.name,date,m.team1,m.team2,m.id,t1.shortcode,t2.shortcode,m.phase,m.place,m.dayNumber,m.competition_id,m.time,m.matchNumber FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id = ? and m.id = ? order by date asc;
get.matches = SELECT t1.name,t2.name,date,m.team1,m.team2,m.id,m.time,m.dayNumber,m.matchNumber,m.phase,m.place FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id =? order by date asc;
insert.matchplayers = insert into match_players(match_id,team1,player_id)values(?,?,?);
delete.matchPlayers = delete from match_players where match_id=? and team1=?;
search.matches = SELECT t1.name,t2.name,date,m.team1,m.team2,m.id,m.time,m.dayNumber,m.matchNumber,m.phase,m.place FROM 'matches' m join teams t1 on t1.id = m.team1 join teams t2 on t2.id = m.team2  where m.competition_id =? 


insert.matchsetevaluationteam = insert into match_evaluation_team (match_id ,evaluation_team_id ,opponent_team_id) values(?,?,?);
insert.matchset = insert into match_evaluation_set(match_evaluation_team_id,set_no,won_by,start_time,end_time,evaluator,date)values(?,?,?,?,?,?,?);
insert.matchset.rotationorder = insert into setRotationOrder(position,playerId,match_evaluation_id) values(?,?,?);
insert.matchset.substitution= insert into set_substitution(position,rotation_player_id,match_evaluation_id) values(?,?,?);
insert.matchset.plusminus= insert into set_plus_minus(opponent_error,team_fault,match_evaluation_id) values(?,?,?);
insert.matchset.timeout=insert into set_timeOut(position,timeOut,A,B,match_evaluation_id,timeout_at_rally) values(?,?,?,?,?,?);



update.matchset.score = update match_evaluation_set set homescore=? , opponentscore=? where id=?;
update.matchset.substitution.point1 = update set_substitution set substitute_player_id = ?, point1=?,point1_at_rally_id=? where position=? and match_evaluation_id=?
update.matchset.substitution.point2 = update set_substitution set point2=?,point2_at_rally_id=? where position=? and match_evaluation_id=?
update.matchset.plusminus=update set_plus_minus set opponent_error=? , team_fault=? where match_evaluation_id=?
update.matchset.timeout = update set_timeOut set A = ? , B = ? where id =?;

update.match=update matches set team1=?,team2=?,dayNumber=?,matchNumber=?,date=?,TIME=?,phase=?,competition_id=?,place=? where id=?;
update.matchsetevaluationteam=update match_evaluation_team set evaluation_team_id=?,opponent_team_id=? where match_id=?;


update.matchset.substitution.point1.score = update set_substitution set  point1=? where id=?
update.matchset.substitution.point2.score = update set_substitution set  point2=? where id=?

get.latest.match.id = select id from matches order by id desc limit 1;
get.latest.matchset.id = select id from match_evaluation_set order by id desc limit 1;
get.matchset = select mes.id,mes.match_evaluation_team_id,met.evaluation_team_id,met.opponent_team_id,mes.set_no,mes.homescore,mes.opponentscore,mes.won_by,mes.start_time,mes.end_time,mes.evaluator,mes.date from match_evaluation_set mes join match_evaluation_team met on mes.match_evaluation_team_id = met.id where match_evaluation_team_id = ? and set_no = ? 
get.matchset.rotationorder = select id,position,playerId,match_evaluation_id from setRotationOrder where match_evaluation_id=?;
get.matchset.substitution= select id ,position,rotation_player_id,match_evaluation_id,substitute_player_id ,point1 ,point2  from set_substitution where match_evaluation_id=?
get.matchset.plusminus = select opponent_error,team_fault from set_plus_minus where  match_evaluation_id=?
get.matchset.timeout.count = select count(id) from set_timeOut where match_evaluation_id=?
get.matchset.timeout = select position,timeOut,A,B,match_evaluation_id from set_timeOut where match_evaluation_id = ?
get.matchset.substitution.point1.forrally= select id ,position,rotation_player_id,match_evaluation_id,substitute_player_id ,point1 ,point2  from set_substitution where match_evaluation_id=? and point1_at_rally_id = ?
get.matchset.substitution.point2.forrally= select id ,position,rotation_player_id,match_evaluation_id,substitute_player_id ,point1 ,point2  from set_substitution where match_evaluation_id=? and point2_at_rally_id = ?

get.matchset.timeoutforrally = select id,position,timeOut,A,B,match_evaluation_id from set_timeOut where match_evaluation_id = ? and timeout_at_rally = ?
get.matchEvaluationTeamid = select id from match_evaluation_team where evaluation_team_id = ? and match_id = ?

insert.rally = insert into rally (number,home_score,opponent_score,start_time,end_time,evaluation_id,start_by, wonby) values(?,?,?,?,?,?,?,?);
insert.rallydetails = insert into rally_details(skill,chest_no,rating,rally_id,order_num) values(?,?,?,?,?);
insert.rallydetails.criteria = insert into rally_details_criteria (skill_desc_criteria_id,type,rally_details_id) values(?,?,?);

update.rallydetails = update rally_details set skill=? , chest_no=? ,rating=?,order_num=? where id =? and rally_id=?;
update.rallydetails.criteria = update rally_details_criteria set skill_desc_criteria_id=?,type=? where id = ?;

get.latest.rally.id = select id from rally order by id desc limit 1;
get.rally = select id,number,home_score,opponent_score,start_time,end_time,evaluation_id,start_by, wonby from rally where number = ? and evaluation_id = ?
get.rallydetails = select  id,skill,chest_no,rating,rally_id from rally_details where rally_id = ? order by order_num asc;
get.rallylist= select id,number from rally where evaluation_id = ?
get.latestrally = select id,home_score,opponent_score,start_by, wonby from rally where evaluation_id = ? order by id desc limit 1
get.rally.ratationorder = select pos1playerId,pos2playerId,pos3playerId,pos4playerId,pos5playerId,pos6playerId from rally_rotation_order where rallyId=?;
get.latest.rally.details.id = select id from rally_details order by id desc limit 1;
get.rallydetails.criteria = select  id,skill_desc_criteria_id,type,rally_details_id from rally_details_criteria where rally_details_id = ?;
get.rallydetails.criteria.id = select  id from rally_details_criteria where rally_details_id = ? and skill_desc_criteria_id=?;
get.rally.count = Select count(r.id) from rally r where r.evaluation_id  =?
get.matchset.latestorder = select pos1playerId,pos2playerId,pos3playerId,pos4playerId,pos5playerId,pos6playerId from match_evaluation_set_latest_rotation where match_evaluation_set_id=?;
get.rallylistgreaterthan = select id,number,home_score,opponent_score,start_time,end_time,evaluation_id from rally where number > ? and evaluation_id = ?

update.rally = update rally set home_score=? ,opponent_score=? , start_by=?, wonby=? where id=?;
delete.rallydetails = delete from rally_details where id = ?
delete.rallydetails.criteria =delete from rally_details_criteria where rally_details_id = ?

update.matchsetWonby = update match_evaluation_set set won_by = ? where id = ?

get.vollycourtcoordinates = select  x1,y1, x2,y2, x3,y3, x4,y4,Type,from_pos,to_pos from VollyCourtCoordinates where type=? and from_pos = ? and to_pos = ?

#report queries
get.skillwiseplayerreport = select p.id,p.name ,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as best ,t.name from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me  on r.evaluation_id = me.id join match_evaluation_team met  on me.match_evaluation_team_id= met.id join matches m  on met.match_id = m.id join teams t on  p.team_id = t.id  where rd.skill = ? and m.competition_id = ?  group by rd.chest_no   ORDER BY best/total_service desc
get.skillwiseplayermatchreport = select m.id,printf('%s %s %s',t1.name, " vs ", t2.name) as match ,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as best from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t1 on m.team1 = t1.id join teams t2 on m.team2 = t2.id  where rd.skill = ? and m.competition_id = ? and p.id = ?  group by m.id   ORDER BY best/total_service desc
get.skillwiseplayerMatchTeamreport = select p.id,p.name ,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as best from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join matches m on me.match_id = m.id where rd.skill = ? and m.competition_id = ? and m.id=? and p.id in (select id from players where team_id = ?)group by rd.chest_no  ORDER BY best/total_service desc 
get.skillwiseteamreport = select t.id,t.name,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5  THEN 1 else 0  END) as Service from players p join teams t on p.team_id = t.id join rally_details rd on p.id = rd.chest_no where rd.skill=? group by t.id order by Service/total_service desc
get.skillwiseteammatchreport =  select m.id,printf('%s %s %s',t1.name, " vs ", t2.name) as match ,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as best  from rally_details rd join players p  on rd.chest_no = p.id join rally r  on r.id = rd.rally_id join match_evaluation_set me  on r.evaluation_id = me.id join matches m  on me.match_id = m.id join teams t1 on m.team1 = t1.id join teams t2 on m.team2 = t2.id where rd.skill = ? and m.competition_id = ? and m.team1 = ? group by m.id ORDER BY best/total_service desc
get.player.scores=select p.id,p.name ,count(m.id) as matchesPlayed,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence ,t.name from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and p.id = ?  group by rd.chest_no  
get.player.matchScore = select p.id,p.name ,count(m.id) as matchesPlayed,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence ,t.name from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and p.id = ?  and met.id = ? group by rd.chest_no  
get.player.matches.played = select count(distinct(met.id))from match_evaluation_team met  join match_evaluation_set ms on ms.match_evaluation_team_id = met.id join rally r on r.evaluation_id = ms.id join rally_details rd on rd.rally_id = r.id where rd.chest_no = ?
get.plyer.skillWise.score = select p.id,p.name ,count(rd.skill) as  total_attempt,sum(CASE WHEN rd.rating =1  THEN 1 else 0  END) as one,sum(CASE WHEN rd.rating =2  THEN 1 else 0  END) as two,sum(CASE WHEN rd.rating =3  THEN 1 else 0  END) as three,sum(CASE WHEN rd.rating =4  THEN 1 else 0  END) as four,sum(CASE WHEN rd.rating =5  THEN 1 else 0  END) as five from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and p.id = ?  and rd.skill =? group by rd.chest_no  
get.plyer.skillWise.scorebymatch = select p.id,p.name ,count(rd.skill) as  total_attempt,sum(CASE WHEN rd.rating =1  THEN 1 else 0  END) as one,sum(CASE WHEN rd.rating =2  THEN 1 else 0  END) as two,sum(CASE WHEN rd.rating =3  THEN 1 else 0  END) as three,sum(CASE WHEN rd.rating =4  THEN 1 else 0  END) as four,sum(CASE WHEN rd.rating =5  THEN 1 else 0  END) as five from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and p.id = ?  and rd.skill =? and m.id= ? group by rd.chest_no  
get.team.skillWise.score = select t.id,t.name ,count(rd.skill) as  total_attempt,sum(CASE WHEN rd.rating =1  THEN 1 else 0  END) as one,sum(CASE WHEN rd.rating =2  THEN 1 else 0  END) as two,sum(CASE WHEN rd.rating =3  THEN 1 else 0  END) as three,sum(CASE WHEN rd.rating =4  THEN 1 else 0  END) as four,sum(CASE WHEN rd.rating =5  THEN 1 else 0  END) as five from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and t.id = ?  and rd.skill =? group by t.id 
get.player.allScoresCountByMatch = select m.id,printf('%s %s %s',t1.name, " vs ", t2.name) as match ,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as score5, sum(CASE WHEN rd.rating =4 THEN 1 else 0  END) as score4 ,sum(CASE WHEN rd.rating =3 THEN 1 else 0  END) as score3 ,sum(CASE WHEN rd.rating =2 THEN 1 else 0  END) as score2, sum(CASE WHEN rd.rating =1 THEN 1 else 0  END) as score1 ,m.phase from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t1 on m.team1 = t1.id join teams t2 on m.team2 = t2.id  where rd.skill = ? and m.competition_id = ? and p.id = ?  group by m.id ;
get.player.match.skillwisereport.by.match = select p.id,p.name,t.name,count(rd.skill) as  total_service ,sum(CASE WHEN rd.rating =5 THEN 1 else 0  END) as best from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id  join teams t on met.evaluation_team_id = t.id where rd.skill = ? and p.id =?  and me.match_evaluation_team_id = ?  ORDER BY best/total_service desc
get.team.scores = select t.id,t.name,0,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence ,t.name from players p join teams t on p.team_id = t.id join rally_details rd on p.id = rd.chest_no where t.id = ?
get.team.matches.played = select count(met.id) from match_evaluation_team met  join match_evaluation_set ms on ms.match_evaluation_team_id = met.id where met.evaluation_team_id = ?;

get.match.evaluationId = select id from match_evaluation_team where evaluation_team_id = ?
get.team.match.details=select met.match_id  ,t.name,0,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence from players p join teams t on p.team_id = t.id join rally_details rd on p.id = rd.chest_no join rally r on r.id = rd.rally_id join match_evaluation_set mes on mes.id = r.evaluation_id join match_evaluation_team met on met.evaluation_team_id = t.id where met.id = ?
get.match.name = select printf('%s %s %s',t1.shortcode, " vs ", t2.shortcode), m.phase from matches m join teams t1 on m.team1 = t1.id join teams t2 on m.team2 = t2.id where m.id = ?
get.match.evaluationId.bymatch = select id from match_evaluation_team where evaluation_team_id = ? and match_id =?

get.rallydetialsByPlayerSkill = select rd.id,rd.skill, p.id,rd.rating,r.id from rally_details rd join players p on rd.chest_no = p.id  join rally r on r.id = rd.rally_id  join match_evaluation_set me on r.evaluation_id = me.id  join match_evaluation_team met on me.match_evaluation_team_id= met.id  join matches m on met.match_id = m.id join teams t on p.team_id = t.id  where p.id = ?  and rd.skill =?  
get.rallydetialsByPlayerSkillbyrating = select rd.id,rd.skill, p.id,rd.rating,r.id from rally_details rd join players p on rd.chest_no = p.id  join rally r on r.id = rd.rally_id  join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where p.id = ?  and rd.skill =? and rd.rating = ?
get.playerDetailById = select p.id,p.name,p.position,p.is_captain,p.chest_num,p.team_id,t.name,t.shortcode from players p join teams t on p.team_id = t.id where p.id = ?
get.rallydetailsByPlayerSkillMatch = select rd.id,rd.skill, p.id,rd.rating,r.id from rally_details rd join players p on rd.chest_no = p.id  join rally r on r.id = rd.rally_id  join match_evaluation_set me on r.evaluation_id = me.id  join match_evaluation_team met on me.match_evaluation_team_id= met.id  join matches m on met.match_id = m.id join teams t on p.team_id = t.id  where p.id = ?  and rd.skill =?  and m.id=?


get.rallydetailsByPlayerSkillMatchRating = select rd.id,rd.skill, p.id,rd.rating,r.id from rally_details rd join players p on rd.chest_no = p.id  join rally r on r.id = rd.rally_id  join match_evaluation_set me on r.evaluation_id = me.id  join match_evaluation_team met on me.match_evaluation_team_id= met.id  join matches m on met.match_id = m.id join teams t on p.team_id = t.id  where p.id = ?  and rd.skill =?  and m.id=? and rd.rating = ?
get.setandwonbymatch = select won_by from match_evaluation_set mes join match_evaluation_team met on mes.match_evaluation_team_id = met.id join matches m on m.id = met.match_id where m.id =? 
update.matchWonBy = update matches set won_by = ? where id = ?
get.team.reagistertotal = select ?,sum(CASE WHEN m.team1 =? THEN 1 else (case when m.team2=? then 1 else 0 end)  END) from matches m 
get.teamwonloss = select sum(CASE WHEN m.won_by= ? THEN 1 else 0 END) as win,sum(CASE WHEN m.won_by <> 0 and m.won_by<>? THEN 1 else 0 end) as loss from matches m where m.team1 = ? or m.team2=?;

get.match.teamDetails=select t.id,t.name,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and m.id = ? group by t.id  
get.team.skillwisescore.ofmatch = select t.id,t.name ,count(rd.skill) as  total_attempt,sum(CASE WHEN rd.rating =1  THEN 1 else 0  END) as one,sum(CASE WHEN rd.rating =2  THEN 1 else 0  END) as two,sum(CASE WHEN rd.rating =3  THEN 1 else 0  END) as three,sum(CASE WHEN rd.rating =4  THEN 1 else 0  END) as four,sum(CASE WHEN rd.rating =5  THEN 1 else 0  END) as five from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and t.id = ? and m.id=? and rd.skill =? group by t.id 
get.match.teamDetails.byplayer = select p.id,p.name,sum(CASE WHEN rd.skill =1 THEN 1 else 0  END) as  total_service ,sum(CASE WHEN rd.rating =5 and rd.skill =1  THEN 1 else 0  END) as Service,sum(CASE WHEN rd.skill =2 THEN 1 else 0  END) as  total_Attack ,sum(CASE WHEN rd.rating =5 and rd.skill =2 THEN 1 else 0  END) as Attack ,sum(CASE WHEN rd.skill =3 THEN 1 else 0  END) as  total_block ,sum(CASE WHEN rd.rating =5 and rd.skill =3 THEN 1 else 0  END) as block ,sum(CASE WHEN rd.skill =4 THEN 1 else 0  END) as  total_set ,sum(CASE WHEN rd.rating =5 and rd.skill =4 THEN 1 else 0  END) as 'set' ,sum(CASE WHEN rd.skill =5 THEN 1 else 0  END) as  total_Reception ,sum(CASE WHEN rd.rating =5 and rd.skill =5 THEN 1 else 0  END) as Reception ,sum(CASE WHEN rd.skill =6 THEN 1 else 0  END) as  total_Defence ,sum(CASE WHEN rd.rating =5 and rd.skill =6 THEN 1 else 0  END) as Defence from rally_details rd join players p on rd.chest_no = p.id join rally r on r.id = rd.rally_id join match_evaluation_set me on r.evaluation_id = me.id join match_evaluation_team met on me.match_evaluation_team_id= met.id join matches m on met.match_id = m.id join teams t on p.team_id = t.id where m.competition_id = ? and m.id = ? and t.id = ? and p.id= ? group by t.id  

#user
get.userDetails=select id,name,email_id from user where name=?;


#training
create.trainingbatch = CREATE TABLE trainingbatch (id INTEGER PRIMARY KEY AUTOINCREMENT,name VARCHAR(255) NOT NULL,shortcode varchar(50),coach VARCHAR(255),asst_coach VARCHAR(255),trainer VARCHAR(255),medical_officer VARCHAR(255),analyzer VARCHAR(255);
